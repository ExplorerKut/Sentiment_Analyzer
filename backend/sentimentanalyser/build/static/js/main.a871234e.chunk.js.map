{"version":3,"sources":["../node_modules/sentiment/languages sync /^/.*/index$","services/httpService.js","components/home.jsx","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","axios","interceptors","response","use","error","status","console","log","toast","Promise","reject","get","post","put","delete","sentiment","Sentiment","Home","state","confidence","generalSentiment","findSentiment","event","a","result","analyze","currentTarget","value","score","review","http","data","prediction","setState","this","className","autoFocus","style","backgroundColor","onChange","placeholder","rows","getBadgeClass","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yKAAA,IAAIA,EAAM,CACT,aAAc,IAIf,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,qMCnBpBY,IAAMC,aAAaC,SAASC,IAAI,MAAM,SAACC,GASrC,OAPEA,EAAMF,UACNE,EAAMF,SAASG,QAAU,KACzBD,EAAMF,SAASG,OAAS,MAExBC,QAAQC,IAAI,oBAAqBH,GACjCI,IAAMJ,MAAM,iCAEPK,QAAQC,OAAON,MAET,OACbO,IAAKX,IAAMW,IACXC,KAAMZ,IAAMY,KACZC,IAAKb,IAAMa,IACXC,OAAQd,IAAMc,Q,OCZVC,EAAY,IAAIC,IA+EPC,E,4MA5EbC,MAAQ,CACNC,WAAY,IACZC,iBAAkB,W,EAOpBC,c,uCAAgB,WAAMC,GAAN,yBAAAC,EAAA,6DACRC,EAAST,EAAUU,QAAQH,EAAMI,cAAcC,OACvCH,EAAOI,MACfC,EAAOP,EAAMI,cAAcC,MAHnB,SAIMG,EAAKlB,KAAK,6BAA6B,CAACiB,WAJ9C,gBAIPE,EAJO,EAIPA,KAMJZ,EAAaY,EAAKZ,WAClBC,EAAqC,IAAlBW,EAAKC,WAAgB,WAAW,WACvD,EAAKC,SAAS,CAACd,aAAYC,qBAZZ,4C,oJAHhB,sBAAAG,EAAA,0F,iFAkBA,WACE,OAAIW,KAAKhB,MAAMC,WAAa,EAAU,sBAC7Be,KAAKhB,MAAMC,WAAa,EAAU,qBAC/B,wB,oBAEd,WACE,OACE,sBAAKgB,UAAU,YAAf,UACE,uBACA,uBAEA,qDACA,uBACA,uBACA,sBAAKA,UAAU,cAAf,UACE,0BACEC,WAAS,EACTD,UAAU,gCACVE,MAAO,CAAEC,gBAAiB,SAC1BC,SAAUL,KAAKb,cACfmB,YAAY,oBACZC,KAAK,OAGP,sBAAKN,UAAU,gBAAf,UACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,+CAEF,qBAAKA,UAAU,MAAf,SACE,6BACE,sBAAMA,UAAWD,KAAKQ,gBAAtB,SACGR,KAAKhB,MAAMC,oBAKpB,sBAAKgB,UAAU,OAAf,UACE,qBAAKA,UAAU,QAAf,SACE,sDAEF,qBAAKA,UAAU,MAAf,SACE,6BAAKD,KAAKhB,MAAME,qC,GAnEbuB,a,MCOJC,MATf,WACE,OACE,sBAAKT,UAAU,MAAf,UACE,cAAC,IAAD,IACA,cAAC,EAAD,QCESU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a871234e.chunk.js","sourcesContent":["var map = {\n\t\"./en/index\": 11\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 39;","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n  if (!expectedError) {\r\n    console.log(\"logging the error\", error);\r\n    toast.error(\"An unexpected error occurred\");\r\n  }\r\n  return Promise.reject(error);\r\n});\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"../styles/home.css\";\r\nimport Sentiment from \"sentiment\";\r\nimport http from '../services/httpService'\r\n\r\nconst sentiment = new Sentiment();\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    confidence: \"0\",\r\n    generalSentiment: \"Neutral\",\r\n    \r\n  };\r\n\r\n  async componentDidMount(){\r\n    }\r\n\r\n  findSentiment = async(event) => {\r\n    const result = sentiment.analyze(event.currentTarget.value);\r\n    const score = result.score;\r\n    const review=event.currentTarget.value\r\n    const {data}= await http.post(\"http://localhost:8000/wel/\",{review})\r\n   // let generalSentiment = \"\";\r\n   // if (confidence > 0) generalSentiment = \"Positive\";\r\n   // else if (confidence === 0) generalSentiment = \"Neutral\";\r\n   // else generalSentiment = \"Negative\";\r\n   // this.setState({ confidence, generalSentiment});\r\n   let confidence = data.confidence\r\n   let generalSentiment= (data.prediction===1)?\"Positive\":\"Negative\"\r\n   this.setState({confidence, generalSentiment})\r\n  };\r\n\r\n  getBadgeClass() {\r\n    if (this.state.confidence > 0) return \"badge badge-success\";\r\n    else if (this.state.confidence < 0) return \"badge badge-danger\";\r\n    else return \"badge badge-primary\";\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <br />\r\n        <br />\r\n\r\n        <h1> Sentiment Analyser</h1>\r\n        <br />\r\n        <br />\r\n        <div className=\"input-group\">\r\n          <textarea\r\n            autoFocus\r\n            className=\"form-control form-control-lg \"\r\n            style={{ backgroundColor: \"white\" }}\r\n            onChange={this.findSentiment}\r\n            placeholder=\"Enter a review...\"\r\n            rows=\"10\"\r\n          ></textarea>\r\n\r\n          <div className=\"container div\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                <h3>Confidence:</h3>\r\n              </div>\r\n              <div className=\"col\">\r\n                <h2>\r\n                  <span className={this.getBadgeClass()}>\r\n                    {this.state.confidence}\r\n                  </span>\r\n                </h2>\r\n              </div>\r\n            </div>\r\n            <div className=\"row \">\r\n              <div className=\"col-6\">\r\n                <h3>General Sentiment:</h3>\r\n              </div>\r\n              <div className=\"col\">\r\n                <h2>{this.state.generalSentiment}</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n\r\n","import \"./App.css\";\nimport Home from \"./components/home\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToastContainer/>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}